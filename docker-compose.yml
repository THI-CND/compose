services:
  postgres:
    build: .
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_MULTIPLE_DATABASES: recipe,collection,notification,users,ingredient,review

  redis:
    image: redis/redis-stack:latest
    restart: unless-stopped
    command : redis-server --requirepass password
    ports: 
      - "6379:6379"
      - "8001:8001"
  
  rabbitmq:
    image: rabbitmq:3-management
    restart: unless-stopped
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
        test: rabbitmq-diagnostics -q ping
        interval: 15s
        timeout: 30s
        retries: 5

  recipe-service:
    pull_policy: always
    image: ghcr.io/thi-cnd/recipe_service:latest
    restart: unless-stopped
    ports:
      - "8088:8080"
      - "9098:9090"
    environment:
        DB_URL: jdbc:postgresql://postgres:5432/recipe
        DB_USER: postgres
        DB_PASSWORD: password
        RABBIT_HOST: rabbitmq
        RABBIT_PORT: 5672
        RABBIT_USER: guest
        RABBIT_PASSWORD: guest
    depends_on:
      - postgres
      - rabbitmq

  collection-service:
    pull_policy: always
    image: ghcr.io/thi-cnd/collection_service:v1.2.0-next.9 
    ports:
      - "8000:8000"
      - "50051:50051" 
    environment:
        SECRET_KEY_DJANGO: django-insecure-vm$+=b8+s&54m6*yz*h&7m2b0nq_+ujg30akgs%+v5jw!p_=xg
        DB_NAME: collection
        DB_USER: postgres
        DB_PASSWORD: password
        DB_HOST: postgres
        DB_PORT: 5432
        RABBITMQ_USER: guest
        RABBITMQ_PASSWORD: guest
        RABBITMQ_HOST: rabbitmq
        RABBITMQ_EXCHANGE: recipemanagement
        USE_TEST_DB: False
    restart: unless-stopped
    depends_on:
     postgres:
       condition: service_started
     rabbitmq:
       condition: service_healthy
    
  notification-service:
    pull_policy: always
    image: ghcr.io/thi-cnd/notification_service:latest
    ports:
      - "8081:8080"
      - "9091:9090"
    environment:
        DB_URL: jdbc:postgresql://postgres:5432/notification
        DB_USER: postgres
        DB_PASSWORD: password
        RABBITMQ_USER: guest
        RABBITMQ_PASSWORD: guest
        RABBITMQ_HOST: rabbitmq
        RABBITMQ_EXCHANGE: recipemanagement
        JAVA_TOOL_OPTIONS: "-XX:UseSVE=0" #Fix for ARM64 Bug
    restart: unless-stopped
    depends_on:
     postgres:
       condition: service_started
     rabbitmq:
       condition: service_healthy
  
  user-service:
    pull_policy: always
    image: ghcr.io/thi-cnd/user_service:latest
    ports: 
      - 8082:8082
    environment:
      GIN_MODE: debug
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: password
      DB_NAME: users
      RABBIT_HOST: rabbitmq
      RABBIT_PORT: 5672
      RABBIT_USER: guest
      RABBIT_PASSWORD: guest
    restart: unless-stopped
    depends_on:
     postgres:
       condition: service_started
     rabbitmq:
       condition: service_healthy

  ingredient-service:
    pull_policy: always
    image: ghcr.io/thi-cnd/ingredient_service:latest
    restart: unless-stopped
    ports:
      - "8083:8083"
    environment:
      DB_URL: jdbc:postgresql://postgres:5432/ingredient
      DB_USER: postgres
      DB_PASSWORD: password
      RABBIT_HOST: rabbitmq
      RABBIT_PORT: 5672
      RABBIT_USER: guest
      RABBIT_PASSWORD: guest
    depends_on:
      - postgres
      - rabbitmq

  review-service:
    pull_policy: always
    image: ghcr.io/thi-cnd/review_service:latest
    restart: unless-stopped
    ports:
      - "8084:8084"
    environment:
      DB_URL: jdbc:postgresql://postgres:5432/review
      DB_USER: postgres
      DB_PASSWORD: password
      RABBIT_HOST: rabbitmq
      RABBIT_PORT: 5672
      RABBIT_USER: guest
      RABBIT_PASSWORD: guest
    depends_on:
      - postgres
      - rabbitmq

  feed-service:
    image: ghcr.io/thi-cnd/feed_service:v0.1
    restart: unless-stopped
    environment:
      RECIPE_SERVICE_URL: http://recipe-service:8080/api/v1/recipe
      COLLECTION_SERVICE_URL: http://collection-service:8000/collections
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: password
    ports:
      - "8085:8080"


  
